# Default values for orthanc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: osimis/orthanc 
  pullPolicy: Always 
  digest: "sha256:20413096878fb56bf8d09af08cf4055993dbcf507526f0561b26fc4d0ed7affc" # digest for version 22.11.3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "orth-service"

podAnnotations: {}

podSecurityContext:
  # fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP 
  httpPort: 8042
  dicomPort: 4242 

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    # cpu: 100m # Do not set CPU limit
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 75

nodeSelector: {}

tolerations: []

affinity: {}


## app configuration 
catls:
  secretName: ca-secret
  caCommonName: ca.orthweb.com
dbtls:
  secretName: dbtls-secret
  certCommonName: db.orthweb.com
dcmtls:
  secretName: dcmtls-secret
  certCommonName: dicom.orthweb.com
https:
  secretName: https-secret
  certCommonName: web.orthweb.com

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql-ha/values.yaml

postgresql-ha:
  enabled: true
  volumePermissions:
    enabled: true
  postgresql:
    initdbScriptsCM: orthanc-dbinit
  pgpool:
    tls:
      enabled: true
      certificatesSecret: dbtls-secret 
      certFilename: tls.crt
      certKeyFilename: tls.key
      #certCAFilename: ca.crt # configuring this will require client to precent its cert for verification.
  service:
    portName: tcp-postgresql

traefik:
  enabled: true
  deployment:
    ingressRoute:
      dashboard:
        enabled: false
  ports:
    web:
      expose: true
      exposedPort: 80
      protocol: TCP
      port: 8080
      redirectTo: websecure
    websecure:
      expose: true
      exposedPort: 443
      protocol: TCP
      port: 8443
      tls:
        enabled: true
    dicomtls:
      expose: true
      exposedPort: 11112
      protocol: TCP
      port: 4242
      tls:
        enabled: true
  additionalArguments:
    - "--log.level=DEBUG"
